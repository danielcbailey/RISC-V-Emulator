# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Build Emulator

on: workflow_dispatch

jobs:

  build:
    runs-on: [ ubuntu-latest ]
    steps:
    - uses: actions/checkout@v3

    - name: Check that version has changed
      run: |
        wget https://${{ secrets.S3_BUCKET }}.s3.us-east-2.amazonaws.com/version.txt -o existingVersion.txt
        if cmp -s existingVersion.txt version.txt; then
          echo "The contents of existingVersion.txt and version.txt are the same."
          exit 1
        else
          echo "The contents of existingVersion.txt and version.txt are different."
          exit 0
        fi

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Build Windows x64
      env:
        GOOS: windows
        GOARCH: amd64
      run: go build -o build/riscvemulator-win-x64.exe main.go

    - name: Build Windows x86
      env:
        GOOS: windows
        GOARCH: 386
      run: go build -o build/riscvemulator-win-x86.exe main.go

    - name: Build Windows ARM64
      env:
        GOOS: windows
        GOARCH: arm64
      run: go build -o build/riscvemulator-win-arm64.exe main.go

    - name: Build Linux x64
      env:
        GOOS: linux
        GOARCH: amd64
      run: go build -o build/riscvemulator-linux-x64 main.go

    - name: Build Linux x86
      env:
        GOOS: linux
        GOARCH: 386
      run: go build -o build/riscvemulator-linux-x86 main.go

    - name: Build Linux ARM
      env:
        GOOS: linux
        GOARCH: arm
      run: go build -o build/riscvemulator-linux-arm main.go

    - name: Build Linux ARM64
      env:
        GOOS: linux
        GOARCH: arm64
      run: go build -o build/riscvemulator-linux-arm64 main.go

    - name: Build MacOS x64
      env:
        GOOS: darwin
        GOARCH: amd64
      run: go build -o build/riscvemulator-macos-x64 main.go

    - name: Build MacOS ARM64
      env:
        GOOS: darwin
        GOARCH: arm64
      run: go build -o build/riscvemulator-macos-arm64 main.go

    - name: Packaging Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: "RISC-V Emulator"
        retention-days: 30
        path: |
          build/riscvemulator-win-x64.exe
          build/riscvemulator-win-x86.exe
          build/riscvemulator-win-arm64.exe
          build/riscvemulator-linux-x64
          build/riscvemulator-linux-x86
          build/riscvemulator-linux-arm
          build/riscvemulator-linux-arm64
          build/riscvemulator-macos-x64
          build/riscvemulator-macos-arm64
          version.txt

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.S3_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.S3_SECRET_KEY }}
        aws-region: us-east-2

    - name: Copy Version File to build
      run: cp version.txt build/

    - name: Deploy to S3
      run: |
        aws s3 sync build s3://${{ secrets.S3_BUCKET }}/ --delete

